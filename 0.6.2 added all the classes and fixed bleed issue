import java.sql.SQLOutput;
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;
public class Main
{
    public static void main(String[] args) {
        // create an array list to store valid admin usernames and passwords
        List<AdminAccount> validUsers = new ArrayList<>();
        validUsers.add(new AdminAccount(1, "user1", "username1", "password1"));
        validUsers.add(new AdminAccount(2, "user2", "username2", "password2"));
        validUsers.add(new AdminAccount(3, "user3", "username3", "password3"));

        // create an array list to store book information
        List<Book> Books = new ArrayList<>();
        Books.add(new Book(01, "moby", "whale hunting", "fantasy", 10.99));
        Books.add(new Book(02, "Fahrenheit 451", "books are illegal", "Sci-fi", 12.99));
        Books.add(new Book(03, "The art of war", "strategies", "Philosophy", 15.99));


        // create a scanner to read input from the command line
        Scanner input = new Scanner(System.in);

        boolean validLogin = false;
        while (!validLogin) {

            // prompt the user for their username and password
            System.out.println("============================================================");
            System.out.println("=============Welcome to the bookkeeping system==============");
            System.out.println("===================Created by: Aethyr IT====================");
            System.out.println("============================================================");
            System.out.println("                       Please Login                       ");
            System.out.print("Enter your username: ");
            String username = input.nextLine();
            System.out.print("Enter your password: ");
            String password = input.nextLine();

            // check if the entered username and password are in the array list of valid users
            validLogin = false;
            for (AdminAccount validUser : validUsers) {
                if (validUser.getAdminUsername().equals(username) && validUser.getAdminPassword().equals(password)) {
                    validLogin = true;
                    break;
                }
            }
        }
        // displays available features
        if (validLogin) {
            System.out.println("Login successful!");
            while (true) {
                System.out.println("=============================================================");
                System.out.println("==========Welcome To The Bookkeep Rental Management==========");
                System.out.println("=============================================================");
                System.out.println("1. Admin Account");
                System.out.println("2. Books");
                System.out.println("3. User Accounts");
                System.out.println("4. Lists All User Rental Records");
                System.out.println("5. Top User That Rent Most Books");
                System.out.println("6. Show Individual Matched Preferences");
                System.out.println("7. Exit Program");
                System.out.println("============================================================");

                //prompts user to choose a feature
                System.out.println("What would you like to access: ");
                int choice = Integer.parseInt(input.nextLine());
                System.out.println("============================================================");
                switch (choice) {

                    // Admin Account Management
                    case 1: {
                        System.out.println("***Admin Account***");
                        System.out.println("1. add admin accounts");
                        System.out.println("2. delete admin accounts");
                        System.out.println("3. Show admin account list");
                        int adminAccount = Integer.parseInt(input.nextLine());
                        switch (adminAccount) {
                            case 1: {
                                System.out.println("Adding Account");
                                System.out.println("Please input ID: ");
                                int AdminID = input.nextInt();
                                input.nextLine();

                                System.out.println("Please input name: ");
                                String AdminName = input.nextLine();

                                System.out.println("Please input username: ");
                                String AdminUsername = input.nextLine();

                                System.out.println("Please input password: ");
                                String AdminPassword = input.nextLine();

                                AdminAccount newValidusers = new AdminAccount(AdminID, AdminName, AdminUsername, AdminPassword);
                                validUsers.add(newValidusers);

                                break;
                            }

                            case 2: {
                                System.out.println("Deleting Account");

                                System.out.print("Enter the username to be deleted: ");
                                String username = input.nextLine();

                                boolean found = false;
                                for (int i = 0; i < validUsers.size(); i++) {
                                    AdminAccount admin = validUsers.get(i);
                                    if (admin.getAdminUsername().equals(username)) {
                                        validUsers.remove(i);
                                        System.out.println("Account with username '" + username + "' has been successfully deleted.");
                                        found = true;
                                        break;
                                    }
                                }

                                if (!found) {
                                    System.out.println("No account with username '" + username + "' was found.");
                                }
                                System.out.println("====================================");
                                break;
                            }

                            case 3: {
                                System.out.println("====================================");
                                System.out.println("Displaying list of admin accounts");
                                for (int i = 0; i < validUsers.size(); i++)
                                    System.out.println(validUsers.get(i).toString());

                                System.out.println("====================================");
                                break;
                            }

                            default: {
                                System.out.println("invalid input");
                                break;
                            }
                        }
                    }

                    case 2: {
                        System.out.println("Books");
                        break;
                    }
                    case 3: {
                        System.out.println("User Accounts");
                        break;
                    }
                    case 4: {
                        System.out.println("Lists All User Rental Records");
                        break;
                    }
                    case 5: {
                        System.out.println("Top User That Rent Most Books");
                        break;
                    }
                    case 6: {
                        System.out.println("Show Individual Matched Preferences");
                        break;
                    }
                    case 7: {
                        System.out.println("Exiting the program");
                        System.exit(0);
                    }
                    default: {
                        System.out.println("Invalid Input please choose a number from 1 - 7");
                    }

                }
            }
        } else {
            System.out.println("=============================================================");
            System.out.println("    Invalid username or password. Please try again.");
        }
    }
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // the admin class
    class AdminAccount {
        private int adminID;
        private String adminName;
        private String adminUsername;
        private String adminPassword;

        public AdminAccount(int adminID, String adminName, String adminUsername, String adminPassword) {
            this.adminID = adminID;
            this.adminName = adminName;
            this.adminUsername = adminUsername;
            this.adminPassword = adminPassword;
        }

        // makes output not jumbled mess...
        @Override
        public String toString() {
            return "Admin ID: " + this.adminID + ", Admin Name: " + this.adminName + ", Admin Username: " + this.adminUsername + ", Admin Password: " + this.adminPassword;
        }


        // sets and gets AdminID
        public int getAdminID() {
            return adminID;
        }

        public void setAdminID(int adminID) {
            this.adminID = adminID;
        }

        // sets and gets AdminName
        public String getAdminName() {
            return adminName;
        }

        public void setAdminName(String adminName) {
            this.adminName = adminName;
        }

        // sets and gets AdminUsername
        public String getAdminUsername() {
            return adminUsername;
        }

        public void setAdminUsername(String adminUsername) {
            this.adminUsername = adminUsername;
        }

        // sets and gets AdminPassword
        public String getAdminPassword() {
            return adminPassword;
        }

        public void setAdminPassword(String adminPassword) {
            this.adminPassword = adminPassword;
        }
    }

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //the book class
    class Book{
        private int Bookid;
        private String bookname;
        private String description;
        private String genre;
        private double rental;

        public Book(int Bookid, String bookname, String description, String genre, double rental) {
            this.Bookid = Bookid;
            this.bookname = bookname;
            this.description = description;
            this.genre = genre;
            this.rental = rental;
        }

        // sets and gets book
        public int getBookID() {
            return Bookid;
        }
        public void setBookid(int Bookid) {
            this.Bookid = Bookid;
        }
        ///////////////////////////////////////////
        public String getBookName() {
            return bookname;
        }
        public void setBookName(String Bookname) {
            this.bookname = Bookname;
        }
        ///////////////////////////////////////////
        public String getDescription() {
            return description;
        }
        public void setDescription(String description) {
            this.description = description;
        }
        ///////////////////////////////////////////
        public String getGenre() {
            return genre;
        }
        public void setGenre(String genre) {
            this.genre = genre;
        }
        //////////////////////////////////////////
        public double getRental() {
            return rental;
        }
        public void setRental(int rental) {
            this.rental = rental;
        }
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// User account class
   class UserAccount {
    private int userID;
    private String firstName;
    private String lastName;
    private String createdDate;
    private ArrayList<String> genrePreferences;

    public UserAccount(int userID, String firstName, String lastName, String createdDate) {
        this.userID = userID;
        this.firstName = firstName;
        this.lastName = lastName;
        this.createdDate = createdDate;
        this.genrePreferences = new ArrayList<>();
    }

    public int getUserID() {
        return userID;
    }

    public void setUserID(int userID) {
        this.userID = userID;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getCreatedDate() {
        return createdDate;
    }

    public void setCreatedDate(String createdDate) {
        this.createdDate = createdDate;
    }

    public ArrayList<String> getGenrePreferences() {
        return genrePreferences;
    }

    public void addGenre(String genre) {
        genrePreferences.add(genre);
    }

    public void removeGenre(String genre) {
        genrePreferences.remove(genre);
    }
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Rental Class
 class Rental {
    private int rentalID;
    private String rentalDate;
    private UserAccount rentalUserAccount;
    private ArrayList<Book> rentalBookList;

    public Rental(int rentalID, String rentalDate, UserAccount rentalUserAccount) {
        this.rentalID = rentalID;
        this.rentalDate = rentalDate;
        this.rentalUserAccount = rentalUserAccount;
        this.rentalBookList = new ArrayList<>();
    }

    public int getRentalID() {
        return rentalID;
    }

    public void setRentalID(int rentalID) {
        this.rentalID = rentalID;
    }

    public String getRentalDate() {
        return rentalDate;
    }

    public void setRentalDate(String rentalDate) {
        this.rentalDate = rentalDate;
    }

    public UserAccount getRentalUserAccount() {
        return rentalUserAccount;
    }

    public void setRentalUserAccount(UserAccount rentalUserAccount) {
        this.rentalUserAccount = rentalUserAccount;
    }

    public ArrayList<Book> getRentalBookList() {
        return rentalBookList;
    }

    public void addBook(Book book) {
        rentalBookList.add(book);
    }

    public void removeBook(Book book) {
        rentalBookList.remove(book);
    }

    public double totalRentalPrice() {
        double total = 0;
        for (Book book : rentalBookList) {
            total += book.getRental();
        }
        return total;
    }
}
